{"version":3,"file":"main.js","mappings":"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","sources":["./src/demo/app/app.component.ts","./src/demo/app/app.component.html","./src/demo/app/app.module.ts","./src/demo/environments/environment.ts","./src/demo/main.ts","./src/ngx-watermark/lib/watermark.handler.ts","./src/ngx-watermark/lib/ngx-watermark.directive.ts","./src/ngx-watermark/lib/ngx-watermark.module.ts","./src/ngx-watermark/public-api.ts","./src/ngx-watermark/ngx-watermark.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgxWatermarkOptions } from 'ngx-watermark';\nimport { environment } from '../environments/environment';\nimport { ColorEvent } from 'ngx-color';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n    version: string = environment.version;\n\n    options: NgxWatermarkOptions = {\n        text: 'This is NGX-WATERMARK\\nSimple watermark text\\nmultiple line and custom font',\n        width: 350,\n        height: 300,\n        fontFamily: 'Kanit',\n        color: '#999',\n        alpha: 0.7,\n        degree: -45,\n        fontSize: '20px',\n    };\n\n    optionsText: string = this.options.text;\n    optionsFont: string = this.options.fontFamily;\n    optionsAlpha: number = this.options.alpha;\n    optionsWidth: number = this.options.width;\n    optionsHeight: number = this.options.height;\n    optionsDegree: number = this.options.degree;\n    optionsFontSize: string = this.options.fontSize;\n\n    optionsTextChange() {\n        this.updateOptions({ text: this.optionsText });\n    }\n\n    optionsFontChange() {\n        this.updateOptions({ fontFamily: this.optionsFont });\n    }\n\n    colorSelect(_c: ColorEvent) {\n        this.updateOptions({ color: _c.color.hex });\n    }\n\n    optionsAlphaChange() {\n        this.updateOptions({ alpha: this.optionsAlpha });\n    }\n\n    optionsWidthChange() {\n        this.updateOptions({ width: this.optionsWidth });\n    }\n\n    optionsHeightChange() {\n        this.updateOptions({ height: this.optionsHeight });\n    }\n\n    optionsDegreeChange() {\n        this.updateOptions({ degree: this.optionsDegree});\n    }\n\n    optionsFontSizeChange() {\n        this.updateOptions({ fontSize: this.optionsFontSize });\n    }\n\n    private updateOptions(_obj: any) {\n        this.options = Object.assign({}, this.options, _obj);\n    }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark shadow-sm\">\n    <a class=\"navbar-brand\" href=\"#\">\n        <img height=\"32px\" src=\"https://angular.io/assets/images/logos/angular/angular.svg\" width=\"32px\">\n        ngx-watermark@{{version}}\n    </a>\n\n    <ul class=\"nav navbar-nav mr-auto\"></ul>\n    <ul class=\"nav navbar-nav\">\n        <li class=\"nav-item align-items-center\">\n            <a href=\"https://github.com/MADCAZ/ngx-watermark/\">\n                <img alt=\"GitHub Stars\"\n                    src=\"https://img.shields.io/github/stars/MADCAZ/ngx-watermark?label=Github&style=social\" />\n            </a>\n        </li>\n    </ul>\n\n</nav>\n\n<main role=\"main\" class=\"container mt-3\">\n\n    <section class=\"jumbotron text-center\" [ngxWatermark]=\"options\">\n        <div class=\"container\">\n            <h1>NGX-WATERMARK</h1>\n            <p class=\"lead text-muted\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean viverra maximus venenatis. Cras lorem\n                nulla, malesuada ac lobortis ut, tincidunt a ipsum. Sed varius, dui at efficitur cursus, massa leo\n                condimentum nisl, id bibendum leo magna ut erat. Vestibulum eu blandit enim. Pellentesque eros quam,\n                finibus quis tincidunt quis, porttitor vel magna. Aenean quis lobortis purus. Ut aliquam velit et magna\n                pulvinar, sit amet sollicitudin ipsum dapibus. Nam ut tellus eu lorem ultricies feugiat. Fusce leo eros,\n                ullamcorper et mattis ac, dignissim at quam. Donec blandit blandit turpis. Vivamus scelerisque erat\n                pharetra nisi suscipit ultrices. Nam sed lorem at leo vehicula eleifend in eget elit. Quisque varius\n                diam erat, eu faucibus diam varius vitae.\n            </p>\n            <p>\n                <a href=\"#\" class=\"btn btn-primary mr-2 my-2\">Submit</a>\n                <a href=\"#\" class=\"btn btn-secondary my-2\">Cancel</a>\n            </p>\n        </div>\n    </section>\n\n    <section class=\"mb-5\">\n        <div class=\"card\">\n            <div class=\"card-header bg-secondary text-white\">\n                <i class=\"fa fa-cog\" aria-hidden=\"true\"></i>\n                Customize\n            </div>\n            <div class=\"card-body\">\n                <form>\n                    <div class=\"row\">\n                        <div class=\"form-group col\">\n                            <label for=\"text\">Text</label>\n                            <textarea class=\"form-control\" id=\"text\" rows=\"3\" [(ngModel)]=\"optionsText\" [ngModelOptions]=\"{standalone: true}\" (change)=\"optionsTextChange()\"></textarea>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <div class=\"row\">\n                                <div class=\"form-group col-md-6\">\n                                    <label for=\"font\">Font-Family</label>\n                                    <select class=\"form-control\" id=\"font\" [(ngModel)]=\"optionsFont\" [ngModelOptions]=\"{standalone: true}\" (change)=\"optionsFontChange()\">\n                                        <option value=\"Arial\">Arial</option>\n                                        <option value=\"Georgia\">Georgia</option>\n                                        <option value=\"Courier New\">Courier New</option>\n                                        <option value=\"Kanit\">Kanit (Custom Web Font)</option>\n                                    </select>\n                                </div>\n                                <div class=\"form-group col-md-6\">\n                                    <label for=\"fontSize\">Font Size</label>\n                                    <select class=\"form-control\" id=\"fontSize\" [(ngModel)]=\"optionsFontSize\" [ngModelOptions]=\"{standalone: true}\" (change)=\"optionsFontSizeChange()\">\n                                        <option value=\"16px\">16px</option>\n                                        <option value=\"20px\">20px</option>\n                                        <option value=\"24px\">24px</option>\n                                        <option value=\"28px\">28px</option>\n                                        <option value=\"32px\">32px</option>\n                                        <option value=\"40px\">40px</option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col\">\n                            <label>Color</label>\n                            <color-twitter triangle=\"hide\" [color]=\"options.color\" width=\"350px\" (onChange)=\"colorSelect($event)\"></color-twitter>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"form-group col\">\n                            <label for=\"alpha\">Alpha - <kbd>{{optionsAlpha}}</kbd></label>\n                            <input type=\"range\" class=\"custom-range\" id=\"alpha\" min=\"0\" max=\"1\" step=\"0.1\" [(ngModel)]=\"optionsAlpha\" [ngModelOptions]=\"{standalone: true}\" (ngModelChange)=\"optionsAlphaChange()\" />\n                        </div>\n                        <div class=\"form-group col\">\n                            <label for=\"degree\">Degree - <kbd>{{optionsDegree}}</kbd></label>\n                            <input type=\"range\" class=\"custom-range\" id=\"degree\" min=\"-90\" max=\"90\" step=\"5\" [(ngModel)]=\"optionsDegree\" [ngModelOptions]=\"{standalone: true}\" (ngModelChange)=\"optionsDegreeChange()\" />\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"form-group col\">\n                            <label for=\"width\">Width</label>\n                            <input type=\"number\" class=\"form-control\" [(ngModel)]=\"optionsWidth\" [ngModelOptions]=\"{standalone: true}\" (change)=\"optionsWidthChange()\" />\n                        </div>\n                        <div class=\"form-group col\">\n                            <label for=\"height\">Height</label>\n                            <input type=\"number\" class=\"form-control\" [(ngModel)]=\"optionsHeight\" [ngModelOptions]=\"{standalone: true}\" (change)=\"optionsHeightChange()\" />\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </section>\n\n</main>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { NgxWatermarkModule } from 'ngx-watermark';\nimport { ColorTwitterModule } from 'ngx-color/twitter';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    NgxWatermarkModule,\n    ColorTwitterModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  version: require('../../../package.json').version,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","\nimport { Renderer2, ElementRef } from '@angular/core';\nimport { NgxWatermarkOptions } from './ngx-watermark-options.model';\nimport FontFaceObserver from 'fontfaceobserver';\n\nexport class WatermarkHandler {\n\n    private _el: ElementRef;\n    private _renderer: Renderer2;\n\n    readonly DEFAULT_FONT_FAMILY = 'Arial';\n    readonly DEFAULT_OPTIONS: NgxWatermarkOptions = {\n        text: '',\n        width: 300,\n        height: 100,\n        fontFamily: this.DEFAULT_FONT_FAMILY,\n        fontSize: '18px',\n        fontWeight: \"normal\",\n        color: '#999999',\n        alpha: 0.5,\n        degree: -45,\n        lineHeight: 24,\n        textAlign: 'center',\n        textBaseline: 'middle',\n        backgroundRepeat: 'repeat',\n        backgroundPosition: '0% 0%',\n    };\n\n    readonly WEB_SAFE_FONT: string[] = [\n        \"Georgia\", \"Palatino Linotype\", \"Book Antiqua\", \"Palatino\", \"Times New Roman\", \"Times\", \"serif\", // Serif Fonts\n        \"Arial\", \"Helvetica\", \"Arial Black\", \"Gadget\", \"Comic Sans MS\", \"cursive\", \"Impact\", \"Charcoal\", \"Lucida Sans Unicode\", \"Lucida Grande\", \"Tahoma\", \"Geneva\", \"Trebuchet MS\", \"Verdana\", \"sans-serif\", // Sans-Serif Fonts\n        \"Courier New\", \"Courier\", \"Lucida Console\", \"Monaco\", \"monospace\" // Monospace Fonts\n    ];\n\n    constructor(_el: ElementRef, _renderer: Renderer2,) {\n        this._el = _el;\n        this._renderer = _renderer;\n    }\n\n    generateWatermark(_ops: NgxWatermarkOptions) {\n\n        let options: NgxWatermarkOptions = Object.assign({}, this.DEFAULT_OPTIONS, _ops);\n        if (this.isWebSafeFont(options.fontFamily)) {\n            this.processStyleFromOptions(options);\n        } else {\n            let font = new FontFaceObserver(options.fontFamily);\n            font.load().then(() => {\n                this.processStyleFromOptions(options);\n            }).catch(() => {\n                options = Object.assign({}, options, { fontFamily: this.DEFAULT_FONT_FAMILY });\n                this.processStyleFromOptions(options);\n            });\n        }\n    }\n\n    private processStyleFromOptions(_ops: NgxWatermarkOptions) {\n        this.setHTMLElementStyle(['background-image', `url(${this.createDataUrl(_ops)})`]);\n        this.setHTMLElementStyle(['background-repeat', _ops.backgroundRepeat]);\n        this.setHTMLElementStyle(['background-position', _ops.backgroundPosition]);\n    }\n\n    private isWebSafeFont(_font: string): boolean {\n        return this.WEB_SAFE_FONT.indexOf(_font) != -1;\n    }\n\n    private createDataUrl(options: NgxWatermarkOptions): string {\n\n        const width = options.width;\n        const height = options.height;\n\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        canvas.width = width;\n        canvas.height = height;\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.globalAlpha = 0;\n\n        ctx.fillRect(-0.5 * width, -0.5 * height, width, height);\n\n        ctx.font = `${options.fontWeight} ${options.fontSize} ${options.fontFamily}`;\n        ctx.fillStyle = options.color;\n        ctx.globalAlpha = options.alpha;\n        ctx.textAlign = options.textAlign;\n        ctx.textBaseline = options.textBaseline;\n\n        ctx.translate(0 + 0.5 * width, 0 + 0.5 * height);\n        ctx.rotate((options.degree * Math.PI) / 180);\n        this.generateMultiLineText(ctx, options.text, width, options.lineHeight, 0, 0);\n        \n        return canvas.toDataURL();\n    }\n\n    private generateMultiLineText(_ctx: CanvasRenderingContext2D, _text: string, _width: number, _lineHeight: number, x: number, y: number) {\n        let words = _text.split('\\n');\n        let line = '';\n\n        for (var n = 0; n < words.length; n++) {\n            line = words[n];\n            _ctx.fillText(line, x, y);\n            y += _lineHeight;\n        }\n    }\n\n    private setHTMLElementStyle([name, value]: [string, string | number]) {\n        this._renderer.setStyle(this._el.nativeElement, name, value);\n    }\n}","import { Directive, ElementRef, Renderer2, Input, OnChanges } from '@angular/core';\nimport { WatermarkHandler } from './watermark.handler';\nimport { NgxWatermarkOptions } from './ngx-watermark-options.model';\n\n@Directive({\n    selector: '[ngxWatermark]'\n})\nexport class NgxWatermarkDirective implements OnChanges {\n\n    private watermarkHandler: WatermarkHandler;\n\n    constructor(private _el: ElementRef, private _renderer: Renderer2) {\n        this.watermarkHandler = new WatermarkHandler(this._el, this._renderer);\n    }\n\n    @Input('ngxWatermark') options: NgxWatermarkOptions;\n    \n    ngOnChanges() {\n        this.watermarkHandler.generateWatermark(this.options);\n    }       \n\n   \n       \n        \n\n}","import { NgModule } from '@angular/core';\nimport { NgxWatermarkDirective } from './ngx-watermark.directive';\n\n@NgModule({\n    declarations: [NgxWatermarkDirective],\n    imports: [\n    ],\n    exports: [NgxWatermarkDirective]\n})\nexport class NgxWatermarkModule { }\n","/*\n * Public API Surface of ngx-watermark\n */\n\nexport * from './lib/ngx-watermark.module';\nexport * from './lib/ngx-watermark.directive';\nexport * from './lib/ngx-watermark-options.model';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["environment","AppComponent","constructor","version","text","width","height","fontFamily","color","alpha","degree","fontSize","options","optionsTextChange","updateOptions","optionsText","optionsFontChange","optionsFont","colorSelect","_c","hex","optionsAlphaChange","optionsAlpha","optionsWidthChange","optionsWidth","optionsHeightChange","optionsHeight","optionsDegreeChange","optionsDegree","optionsFontSizeChange","optionsFontSize","_obj","Object","assign","selectors","decls","vars","consts","template","i0","ctx","BrowserModule","FormsModule","NgxWatermarkModule","ColorTwitterModule","BrowserAnimationsModule","AppModule","bootstrap","declarations","imports","production","require","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch","err","console","error","WatermarkHandler","_renderer","DEFAULT_FONT_FAMILY","fontWeight","lineHeight","textAlign","textBaseline","backgroundRepeat","backgroundPosition","_el","generateWatermark","_ops","DEFAULT_OPTIONS","isWebSafeFont","processStyleFromOptions","font","FontFaceObserver","load","then","setHTMLElementStyle","createDataUrl","_font","WEB_SAFE_FONT","indexOf","canvas","document","createElement","getContext","clearRect","globalAlpha","fillRect","fillStyle","translate","rotate","Math","PI","generateMultiLineText","toDataURL","_ctx","_text","_width","_lineHeight","x","y","words","split","line","n","length","fillText","name","value","setStyle","nativeElement","NgxWatermarkDirective","watermarkHandler","ngOnChanges","Directive","args","selector","Input","NgModule","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}